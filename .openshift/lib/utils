#!/bin/bash
#
#  Utility functions.
#

export HOME=$OPENSHIFT_DATA_DIR

#  Returns the configured Node version - defaults to 0.10.26.
function get_node_version() {
  marker="$OPENSHIFT_REPO_DIR/.openshift/markers/NODEJS_VERSION"
  nodejs_ver=$(egrep -v "^\s*#.*" "$marker" | egrep -v "^\s*$" | tail -1)
  echo "${nodejs_ver:-"0.10.26"}"
}

#  Returns the directory where Node is to be installed/is installed.
function get_node_install_dir() {
  echo "$OPENSHIFT_DATA_DIR"
}

#  Returns the path to the node and npm binaries.
function get_bin_path() {
  ver=${1:-"$(get_node_version)"}
  echo "$(get_node_install_dir)/node-v$ver-linux-x64/bin"
}

#  Returns the temporary directory we use for processing.
function get_node_tmp_dir() {
  ztmpdir="$OPENSHIFT_DATA_DIR/.nodejs.tmp"
  #  Ensure temp directory is created.
  [ -d "$ztmpdir" ]  ||  mkdir -p "$ztmpdir"
  echo "$ztmpdir"
}

#
#  Download and install the specified Node.js version.
#
function _install_nodejs() {
  ver=${1:-"$(get_node_version)"}

  # Sample download links:
  #  http://nodejs.org/dist/v0.10.26/node-v0.10.26-linux-x64.tar.gz
  zfile="node-v${ver}-linux-x64.tar.gz"
  zlink="http://nodejs.org/dist/v${ver}/${zfile}"

  instdir="$(get_node_install_dir)"

  #  Download and extract the gzipped tarball.
  dldir="$OPENSHIFT_DATA_DIR/downloads"
  mkdir -p "$dldir"
  echo "  - Downloading and extracting $zlink ... "
  if ! curl -L -o "$dldir/$zfile" "$zlink"; then
    echo "  - ERROR  -- download failed for $zlink"
    echo "  - download uri = $dldir/$zfile"
    return 1
  fi
  (cd "$instdir"; tar -zxf "$dldir/$zfile")
  echo "  - Done installing Node.js version $ver"
}



#  Ensure the shell env setup bits are added to user's .bash_profile.
function _ensure_bash_profile_setup() {
  dot_bash_profile=$OPENSHIFT_DATA_DIR/.bash_profile
  pattern='\s*source(.*)\.openshift/lib/setup_custom_nodejs_env\s*(.*)\s*'
  if ! egrep "$pattern" $dot_bash_profile > /dev/null 2>&1 ; then
    cat >> $dot_bash_profile  <<SRCEOF

#  Setup shell env for the custom Node[.js] version.
source "\$OPENSHIFT_REPO_DIR/.openshift/lib/setup_custom_nodejs_env"
SRCEOF
    echo "  - Added source setup_custom_nodejs_env to .bash_profile"
   fi

}


#  Check and install custom Node[.js] version.
function ensure_node_is_installed() {
  ver=${1:-"$(get_node_version)"}

  #
  # To re-download and reinstall Node.js, uncomment these lines.
  #rm -f downloads/node-v${ver}-linux-x64.tar.gz
  #rm -rf $OPENSHIFT_DATA_DIR/node-v${ver}-linux-x64/
  #
  # Note:  This function could be run multiple times on every git push,
  #        so use w/ caution (do once).
  #

  if [ ! -d  "$(get_bin_path)" ]; then
    _install_nodejs
  fi

  #  Ensure .bash_profile sets up path for custom Node[.js] version.
  _ensure_bash_profile_setup
}

#  Sets up PATH to include the custom node version binaries.
function setup_path_for_custom_node_version() {
  bin_path=$(get_bin_path)
  if [[ ":$PATH:" != *":$bin_path:"* ]]; then export PATH="$bin_path:${PATH}"; fi
}

function _checkNode() {
  ensure_node_is_installed
  unset node
  unset npm
  unset pm2
  alias pm2="$OPENSHIFT_REPO_DIR/node_modules/.bin/pm2"
  setup_path_for_custom_node_version
}

function node() {
  _checkNode
  $(get_bin_path)/node $@
}

function npm() {
  _checkNode
  $(get_bin_path)/npm $@
}

function pm2() {
  _checkNode
  $OPENSHIFT_REPO_DIR/node_modules/.bin/pm2 $@
}

export NODE_ENV=openshift
export PM2_BIND_ADDR=$OPENSHIFT_NODEJS_IP
export PM2_HOME=$OPENSHIFT_DATA_DIR

#
# EOF
#
